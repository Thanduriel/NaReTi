//-------------------------------------------//
// NaReTi - standard math library            //
//-------------------------------------------//

/* Note: The given implementations are not guaranteed to be used.
 * With optimization level Basic or higher some functions are overwritten
 */

int pow(int x, int y)
{
	if(y < 0)
	{
		y = 1 / x
		y = 0 - y
	}
	if(y == 0){ return 1 }
	
	int z = 1
	while (y > 1)
	{
		if(y % 2 == 0)
		{
			x = x * x
			y = y / 2
		}
		else
		{
			z = x * z
			x = x * x
			y = (y - 1) / 2
		}
	}
	return x * z
}

float sqrt(float x)
{
	float n = x / 2.0
	float lstX = 0.0 
	while(n != lstX)
	{
		lstX = n
		n = (n + x/n) / 2.0
	}
	return n
}


// fast sinus for x in [-π, π]
float sin(float x)
{
	float xx = x * x
	float s = x + (x * xx) * (-0.16612511580269618 + xx * (0.0080394356072977748 + xx * (-0.000149414020045938777495)))
	
	return s
}
