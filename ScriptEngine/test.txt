/**/
int sum(int arg0, int arg1)
{
	return arg0 + arg1
}

float fsum(float f0, float f1)
{
	return f0 + f1
}

float castTest(int arg0, float arg1)
{
	return arg0 + arg1
}

type Vec2
{
	float x
	float y
}

type iVec2
{
	int x
	int y
}

float memberAccess(Vec2& _vec)
{
	return _vec.y
}

test_memberAssign(iVec2& _vec)
{
	_vec.x = 42
}

int precedence(int a, int b)
{
	return 3 + a * (b + 3) * a + b
}

int test_localVar(int a, int b)
{
	int x
	x = a + b
	
	return x
}

int test_branch(int a)
{
	if(a == 10)
	{
		return 10
	}
	else if(a == 11)
	{
		return 11
	}
	else { return 2}
}

int test_loop(int a, int b)
{
	while(0 < a && b < 57)
	{
		b = b + a
	}
	return b
}